name: CI

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13", "pypy-3.11"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential pkg-config

      - name: Install UV
        run: pip install uv

      # Cache uv's global cache (wheels/sources) and pip cache (optional)
      - name: Cache uv/pip caches
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            ~/.cache/pip
          key: ${{ runner.os }}-uvcache-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-uvcache-${{ matrix.python-version }}-
            ${{ runner.os }}-uvcache-

      # Cache the project virtual environment created by `uv sync`
      - name: Cache project .venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-venv-${{ matrix.python-version }}-
            ${{ runner.os }}-venv-

      - name: Install dependencies
        run: uv sync

      - name: Run tests
        run: uv run pytest -n auto
