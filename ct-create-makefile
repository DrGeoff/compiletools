#! /usr/bin/env python
from __future__ import print_function
from __future__ import unicode_literals

import sys

import configargparse
import ct.utils
import ct.makefile


if __name__ == '__main__':
	# Example: for samples/numbers/ to create the executable (test_library) 
	# that links against libget_numbers
	# ct-create-makefile test_library.cpp --static get_numbers.cpp get_double.cpp get_int.cpp 
	
    variant = ct.utils.extract_variant_from_argv()
    config_files = ct.utils.config_files_from_variant()
    cap = configargparse.getArgumentParser(
        description='Create a Makefile that will compile the given source file into an '
                    'executable (or library). Each given file is assumed to be compiled '
                    'into a separate executable and/or library.',
        formatter_class=configargparse.DefaultsRawFormatter,
        default_config_files=config_files,
        ignore_unknown_config_file_keys=True)

    # The config file has to be added here.  For some reason doing it in the
    # ct.utils.add_common_arguments, or elsewhere, fails.
    cap.add(
        "-c",
        "--config",
        is_config_file=True,
        help="Manually specify the config file path if you want to override the variant default")

    sys.exit(ct.makefile.main())
